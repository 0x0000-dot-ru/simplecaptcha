---
title:      Installing 
created_at: 2009-02-10 11:21:53.587078 -06:00
filter:
  - erb
  - textile
---
h2. Installing

The process for installing SimpleCaptcha is no different than installing most other libraries for a J2EE container: a jar is deployed to WEB-INF/lib and web.xml is updated. These steps are described for reference below.

# Download SimpleCaptcha
# Copy the SimpleCaptcha jar file to your WEB-INF/lib directory
# Add servlet mappings to web.xml. Four servlets are provided for you: <code>StickyCaptchaServlet</code>, <code>SimpleCaptchaServlet</code>, <code>ChineseCaptchaServlet</code>, and <code>AudioCaptchaServlet</code>. All generate CAPTCHA challenge/answer pairs, but <code>StickyCaptchaServlet</code> and <code>ChineseCaptchaServlet</code> are "sticky" to the user's session: page reloads will render the same CAPTCHA instead of generating a new one. An example mapping for StickyCaptchaServlet:

<% coderay :lang => 'xml' do -%>
    <servlet>
        <servlet-name>StickyCaptcha</servlet-name>
        <servlet-class>nl.captcha.servlet.StickyCaptchaServlet</servlet-class>
        <!-- The width and height params are optional; 
        if unspecified they default to 200 and 50 respectively. --!>
        <init-param>
            <param-name>width</param-name>
            <param-value>250</param-value>
        </init-param>
        <init-param>
            <param-name>height</param-name>
            <param-value>75</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>StickyCaptcha</servlet-name>
        <url-pattern>/stickyImg</url-pattern>
    </servlet-mapping>

<% end -%>

And for <code>AudioCaptchaServlet</code>:

<% coderay :lang => 'xml' do -%>
    <servlet>
        <servlet-name>AudioCaptcha</servlet-name>
        <servlet-class>nl.captcha.servlet.AudioCaptchaServlet</servlet-class>
    </servlet>

     <servlet-mapping>
        <servlet-name>AudioCaptcha</servlet-name>
        <url-pattern>/audio.wav</url-pattern>
    </servlet-mapping>
 
<% end -%>

<ol start="4">
<li>Restart your webserver.</li>
<li>Browse to one of the locations given by the @url-pattern@s defined in @web.xml@, e.g., @http://localhost:8080/stickyImg@. If everything has been set up correctly you should see/hear a CAPTCHA challenge.</li>
<li>Now create a JSP called @captcha.jsp@. For an image CAPTCHA, add the following code inside the @<body>@ element:</li></ol>
 
<% coderay :lang => 'html' do -%>
    <img src="/stickyImg" />
    <form action="/captchaSubmit.jsp" method="post">
        <input name="answer" />
    </form>

<% end -%>

<p>Or for an audio CAPTCHA:</p>
<% coderay :lang => 'html' do -%>
    <audio controls autoplay src="/audio.wav"></audio>
    <form action="/captchaSubmit.jsp" method="post">
        <input name="answer" />
    </form>
<% end -%>

<ol start="7">
<li>Create another JSP called @captchaSubmit.jsp@. Add the following:</li></ol>

<% coderay :lang => 'php' do -%>
    <%="<"%>%@ page import="nl.captcha.Captcha" %>
    ...
    <%="<"%>% // We're doing this in a JSP here, but in your own app you'll want to put
    // this logic in your MVC framework of choice.
    Captcha captcha = (Captcha) session.getAttribute(Captcha.NAME);
    // Or, for an AudioCaptcha:
    // AudioCaptcha captcha = (AudioCaptcha) session.getAttribute(Captcha.NAME);
    request.setCharacterEncoding("UTF-8"); // Do this so we can capture non-Latin chars
    String answer = request.getParameter("answer");
    if (captcha.isCorrect(answer)) { %>
        <b>Correct!</b>
    <%="<"%>% } %>

<% end -%>

<ol start="8">
<li>Browse to <code>/captcha.jsp</code>. You should get your CAPTCHA image, as well as a form for entering your answer. Submit the form and see what happens.
</ol>

